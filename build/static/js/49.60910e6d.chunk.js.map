{"version":3,"sources":["utils/propTypes.js","components/Typography.js","components/Page.js","pages/WithdrawlPage.js"],"names":["Object","D_working_put_Indian_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","PropTypes","ID","oneOfType","string","number","isRequired","component","func","date","instanceOf","Date","tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","D_working_put_Indian_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","D_working_put_Indian_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","D_working_put_Indian_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_4__","WithdrawlPage","props","auth","JSON","parse","localStorage","getItem","_useState","useState","_useState2","D_working_put_Indian_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","amount","setAmount","_useState3","_useState4","password","setPassword","_useState5","user","budget","_useState6","total","setTotal","_useState7","_useState8","accNo","setAccNo","_useState9","_useState10","province","setProvince","_useState11","_useState12","accName","setAccName","_useState13","_useState14","bankCode","setBankCode","_useState15","_useState16","bank","useEffect","history","push","react__WEBPACK_IMPORTED_MODULE_4___default","components_Page__WEBPACK_IMPORTED_MODULE_3__","Fragment","react_router_dom__WEBPACK_IMPORTED_MODULE_12__","to","_components_Typography__WEBPACK_IMPORTED_MODULE_13__","react_icons_fa__WEBPACK_IMPORTED_MODULE_11__","color","style","padding","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","md","textAlign","xl","lg","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","addonType","reactstrap__WEBPACK_IMPORTED_MODULE_9__","value","max","parseFloat","placeholder","onChange","target","fontSize","fontWeight","marginLeft","Math","floor","ceil","name","reactstrap__WEBPACK_IMPORTED_MODULE_10__","onClick","console","log","stringify","D_working_put_Indian_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_working_put_Indian_lottery_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","response","data","wrap","_context","prev","next","fetch","method","headers","content-type","Authorization","userToken","body","sent","status","json","alert","message","setItem","error","stop","height"],"mappings":"wHAEeA,OAAAC,EAAA,MACVC,IADL,CAEEC,GAAID,IAAUE,UAAU,CAACF,IAAUG,OAAQH,IAAUI,SAASC,WAC9DC,UAAWN,IAAUE,UAAU,CAACF,IAAUG,OAAQH,IAAUO,OAC5DC,KAAMR,IAAUE,UAAU,CAACF,IAAUS,WAAWC,MAAOV,IAAUG,iGCF7DQ,UAAS,CACbC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,YAAa,KACbC,EAAG,IACHC,KAAM,IACNC,WAAY,eAKRC,EAAa,SAAAC,GAAiD,IAE9DC,EAFqBC,EAAyCF,EAA9CG,IAAUC,EAAoCJ,EAApCI,UAAWC,EAAyBL,EAAzBK,KAASC,EAAgBlC,OAAAmC,EAAA,EAAAnC,CAAA4B,EAAA,4BAC5DQ,EAAUC,IAAWrC,OAAAsC,EAAA,EAAAtC,CAAA,GAAGiC,IAASA,GAAQD,GAW/C,OAPEH,EADEC,KAEQA,GAAOjB,EAAOoB,GACbpB,EAAOoB,GAEP,KAGNM,EAAAC,EAAAC,cAACZ,EAAD7B,OAAA0C,OAAA,GAAcR,EAAd,CAAyBF,UAAWI,MAS7CT,EAAWgB,aAAe,CACxBV,KAAM,KAGON,8FCvCTiB,EAAMC,IAAGC,OAAO,QAEhBC,EAAO,SAAAnB,GAOP,IANJoB,EAMIpB,EANJoB,MACAC,EAKIrB,EALJqB,YACKnB,EAIDF,EAJJG,IACAC,EAGIJ,EAHJI,UACAkB,EAEItB,EAFJsB,SACGhB,EACClC,OAAAmD,EAAA,EAAAnD,CAAA4B,EAAA,sDACEQ,EAAUQ,EAAIQ,EAAE,OAAQpB,GAE9B,OACEqB,EAAAb,EAAAC,cAACX,EAAD9B,OAAA0C,OAAA,CAAKV,UAAWI,GAAaF,GAC3BmB,EAAAb,EAAAC,cAAA,OAAKT,UAAWY,EAAIU,EAAE,WACnBN,GAA0B,kBAAVA,EACfK,EAAAb,EAAAC,cAACc,EAAA,EAAD,CAAYtB,KAAK,KAAKD,UAAWY,EAAIU,EAAE,UACpCN,GAGDA,EAEHC,GACKA,GAGPC,IAcPH,EAAKJ,aAAe,CAClBZ,IAAK,MACLiB,MAAO,IAGMD,6LCxCTH,QAAMC,EAAGC,OAAO,QAwIPU,UAvIO,SAACC,GACrB,IAAIC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SADZC,EAEHC,mBAAS,IAFNC,EAAAjE,OAAAkE,EAAA,EAAAlE,CAAA+D,EAAA,GAExBI,EAFwBF,EAAA,GAEhBG,EAFgBH,EAAA,GAAAI,EAGCL,mBAAS,IAHVM,EAAAtE,OAAAkE,EAAA,EAAAlE,CAAAqE,EAAA,GAGxBE,EAHwBD,EAAA,GAGdE,EAHcF,EAAA,GAAAG,EAILT,mBAASN,EAAKgB,KAAKC,QAJdC,EAAA5E,OAAAkE,EAAA,EAAAlE,CAAAyE,EAAA,GAIxBI,EAJwBD,EAAA,GAIjBE,EAJiBF,EAAA,GAAAG,EAKLf,mBAAS,IALJgB,EAAAhF,OAAAkE,EAAA,EAAAlE,CAAA+E,EAAA,GAKxBE,EALwBD,EAAA,GAKjBE,EALiBF,EAAA,GAAAG,EAMCnB,mBAAS,IANVoB,EAAApF,OAAAkE,EAAA,EAAAlE,CAAAmF,EAAA,GAMxBE,EANwBD,EAAA,GAMdE,EANcF,EAAA,GAAAG,EAODvB,mBAAS,IAPRwB,EAAAxF,OAAAkE,EAAA,EAAAlE,CAAAuF,EAAA,GAOxBE,EAPwBD,EAAA,GAOfE,EAPeF,EAAA,GAAAG,EAQC3B,mBAAS,YARV4B,EAAA5F,OAAAkE,EAAA,EAAAlE,CAAA2F,EAAA,GAQxBE,EARwBD,EAAA,GAQdE,EARcF,EAAA,GAAAG,EAuCP/B,mBAAS,GAvCFgC,EAAAhG,OAAAkE,EAAA,EAAAlE,CAAA+F,EAAA,GAuCxBE,EAvCwBD,EAAA,GAAAA,EAAA,GA6C/B,OALAE,oBAAU,WACI,iBAARD,GACFxC,EAAM0C,QAAQC,KAAK,UAEpB,CAACH,IAEFI,EAAA7D,EAAAC,cAAC6D,EAAA,EAAD,CAAMtD,MAAQqD,EAAA7D,EAAAC,cAAA4D,EAAA7D,EAAA+D,SAAA,KAAEF,EAAA7D,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,GAAG,OAAMJ,EAAA7D,EAAAC,cAACiE,EAAA,EAAD,CAAYzE,KAAK,KAAKD,UAAWY,EAAIU,EAAE,UAAU+C,EAAA7D,EAAAC,cAACkE,EAAA,EAAD,MAAjD,gBAAqGN,EAAA7D,EAAAC,cAAC+D,EAAA,EAAD,CAAMI,MAAM,OAAOH,GAAG,oBAAoBI,MAAO,CAAEC,QAAW,SAAUT,EAAA7D,EAAAC,cAACkE,EAAA,EAAD,QAAuB3E,UAAU,UAE3OqE,EAAA7D,EAAAC,cAACsE,EAAA,EAAD,KACEV,EAAA7D,EAAAC,cAACuE,EAAA,EAAD,CAAKC,GAAI,GAAIJ,MAAO,CAAEK,UAAW,UAAYlF,UAAW,QACtDqE,EAAA7D,EAAAC,cAAA,6BAAgBoC,IAElBwB,EAAA7D,EAAAC,cAACuE,EAAA,EAAD,CAAKG,GAAI,GAAIC,GAAI,GAAIH,GAAI,IACvBZ,EAAA7D,EAAAC,cAAC4E,EAAA,EAAD,KACEhB,EAAA7D,EAAAC,cAAC6E,EAAA,EAAD,CAAiBC,UAAU,WAAUlB,EAAA7D,EAAAC,cAAA,QAAMT,UAAU,oBAAhB,WACrCqE,EAAA7D,EAAAC,cAAC+E,EAAA,EAAD,CAAOC,MAAOtD,EAAQlC,KAAK,SAASyF,IAAKC,WAAWjE,EAAKgB,KAAKC,QAASiD,YAAY,0BAA0BC,SAAU,SAACvE,GAAQc,EAAUd,EAAEwE,OAAOL,WAErJpB,EAAA7D,EAAAC,cAAA,QAAMoE,MAAO,CAAEkB,SAAU,SAAUC,WAAY,MAAOC,WAAY,SAAlE,OAAiFC,KAAKC,MAAe,IAAThE,GAA5F,iBAA0H+D,KAAKE,KAAc,IAATjE,IAYpIkC,EAAA7D,EAAAC,cAAC4E,EAAA,EAAD,KACEhB,EAAA7D,EAAAC,cAAC6E,EAAA,EAAD,CAAiBC,UAAU,WAAUlB,EAAA7D,EAAAC,cAAA,QAAMT,UAAU,oBAAmBqE,EAAA7D,EAAAC,cAACkE,EAAA,EAAD,QACxEN,EAAA7D,EAAAC,cAAC+E,EAAA,EAAD,CAAOC,MAAOlD,EAAUtC,KAAK,WAAW2F,YAAY,4BAA4BC,SAAU,SAACvE,GAAQkB,EAAYlB,EAAEwE,OAAOL,YAG5HpB,EAAA7D,EAAAC,cAACuE,EAAA,EAAD,CAAKG,GAAI,GAAIC,GAAI,GAAIH,GAAI,IACvBZ,EAAA7D,EAAAC,cAAC4E,EAAA,EAAD,KACEhB,EAAA7D,EAAAC,cAAC6E,EAAA,EAAD,CAAiBC,UAAU,WAAUlB,EAAA7D,EAAAC,cAAA,QAAMT,UAAU,oBAAhB,cACrCqE,EAAA7D,EAAAC,cAAC+E,EAAA,EAAD,CAAOvF,KAAK,SAASoG,KAAK,SAASZ,MAAO5B,EAAUgC,SAAU,SAACvE,GAAD,OAAOwC,EAAYxC,EAAEwE,OAAOL,SACxFpB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,eACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,YACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,gBACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,aACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,wBACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,eACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,yDAEApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,kBACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,qBACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,uBACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,uBACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,mBACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,cACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,kBACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,yCACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,aACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,YACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,qBACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,YACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,2BACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,uBACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,wBACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,gBACApB,EAAA7D,EAAAC,cAAA,UAAQgF,MAAM,YAAd,4BAINpB,EAAA7D,EAAAC,cAACuE,EAAA,EAAD,CAAKG,GAAI,GAAIC,GAAI,GAAIH,GAAI,IACvBZ,EAAA7D,EAAAC,cAAC4E,EAAA,EAAD,KACEhB,EAAA7D,EAAAC,cAAC6E,EAAA,EAAD,CAAiBC,UAAU,WAAUlB,EAAA7D,EAAAC,cAAA,QAAMT,UAAU,oBAAhB,cACrCqE,EAAA7D,EAAAC,cAAC+E,EAAA,EAAD,CAAOC,MAAOpC,EAAUpD,KAAK,OAAO2F,YAAY,kBAAkBC,SAAU,SAACvE,GAAQgC,EAAYhC,EAAEwE,OAAOL,YAG9GpB,EAAA7D,EAAAC,cAACuE,EAAA,EAAD,CAAKG,GAAI,GAAIC,GAAI,GAAIH,GAAI,IACvBZ,EAAA7D,EAAAC,cAAC4E,EAAA,EAAD,KACEhB,EAAA7D,EAAAC,cAAC6E,EAAA,EAAD,CAAiBC,UAAU,WAAUlB,EAAA7D,EAAAC,cAAA,QAAMT,UAAU,oBAAhB,eACrCqE,EAAA7D,EAAAC,cAAC+E,EAAA,EAAD,CAAOC,MAAOxC,EAAOhD,KAAK,OAAO2F,YAAY,4BAA4BC,SAAU,SAACvE,GAAQ4B,EAAS5B,EAAEwE,OAAOL,YAGlHpB,EAAA7D,EAAAC,cAACuE,EAAA,EAAD,CAAKG,GAAI,GAAIC,GAAI,GAAIH,GAAI,IACvBZ,EAAA7D,EAAAC,cAAC4E,EAAA,EAAD,KACEhB,EAAA7D,EAAAC,cAAC6E,EAAA,EAAD,CAAiBC,UAAU,WAAUlB,EAAA7D,EAAAC,cAAA,QAAMT,UAAU,oBAAhB,iBACrCqE,EAAA7D,EAAAC,cAAC+E,EAAA,EAAD,CAAOC,MAAOhC,EAASxD,KAAK,OAAO2F,YAAY,0BAA0BC,SAAU,SAACvE,GAAQoC,EAAWpC,EAAEwE,OAAOL,YAGpHpB,EAAA7D,EAAAC,cAACuE,EAAA,EAAD,CAAKC,GAAI,GAAIJ,MAAO,CAAEK,UAAW,UAAYlF,UAAW,QACtDqE,EAAA7D,EAAAC,cAAC6F,EAAA,EAAD,CAAQC,QApHF,WACZC,QAAQC,IAAI9E,KAAK+E,UAAU,CAAEvE,SAAQI,WAAUsB,WAAUJ,UAASR,WAC9Dd,GAAU,IACZnE,OAAA2I,EAAA,EAAA3I,CAAA4I,EAAApG,EAAAqG,KAAC,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAApG,EAAAyG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACwBC,MAAM,iBAAkB,CAC7CC,OAAU,OACVC,QAAW,CACTC,eAAgB,mBAChBC,cAAiB9F,KAAKC,MAAMC,aAAaC,QAAQ,SAAS4F,WAG5DC,KAAMhG,KAAK+E,UAAU,CAAEvE,SAAQI,WAAUsB,WAAUJ,UAASR,QAAOI,eARtE,cAUwB,MATjB0D,EADPG,EAAAU,MAUcC,QACXpG,EAAM0C,QAAQC,KAAK,UAXtB8C,EAAAE,KAAA,EAYoBL,EAASe,OAZ7B,OAYOd,EAZPE,EAAAU,KAawB,KAAnBb,EAASc,QACXE,MAAMf,EAAKgB,SACXtG,EAAKgB,KAAKC,OAASgD,WAAWjE,EAAKgB,KAAKC,QAAUgD,WAAWxD,GAC7DN,aAAaoG,QAAQ,OAAQtG,KAAK+E,UAAUhF,IAC5CoB,EAASpB,EAAKgB,KAAKC,SAGnBoF,MAAMf,EAAKkB,OApBd,wBAAAhB,EAAAiB,SAAArB,KAAD9I,GAuBA+J,MAAM,oCA0FsBnD,MAAM,WAA9B,kBAGJP,EAAA7D,EAAAC,cAACsE,EAAA,EAAD,KACEV,EAAA7D,EAAAC,cAAA,OAAKoE,MAAO,CAAEuD,OAAU","file":"static/js/49.60910e6d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default {\n  ...PropTypes,\n  ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h4\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n              breadcrumbs\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.object\n  \n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import Page from 'components/Page';\nimport React, { useState, useEffect } from 'react';\nimport {\n  Col, InputGroup, InputGroupAddon, Input, FormGroup, Label, Button,\n  Row\n} from 'reactstrap';\nimport {\n  FaArrowCircleLeft, FaSearch, FaKey,\n  FaBars\n} from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport Typography from '../components/Typography';\nimport bn from 'utils/bemnames';\nconst bem = bn.create('page');\nconst WithdrawlPage = (props) => {\n  var auth = JSON.parse(localStorage.getItem('auth'));\n  const [amount, setAmount] = useState('');\n  const [password, setPassword] = useState('');\n  const [total, setTotal] = useState(auth.user.budget);\n  const [accNo, setAccNo] = useState(\"\");\n  const [province, setProvince] = useState(\"\");\n  const [accName, setAccName] = useState(\"\");\n  const [bankCode, setBankCode] = useState(\"IDPT0001\");\n  const apply = () => {\n    console.log(JSON.stringify({ amount, password, bankCode, accName, accNo }));\n    if (amount >= 100) {\n      (async () => {\n        const response = await fetch(\"/api/withdrawl\", {\n          \"method\": \"POST\",\n          \"headers\": {\n            \"content-type\": \"application/json\",\n            \"Authorization\": JSON.parse(localStorage.getItem('auth')).userToken\n\n          },\n          body: JSON.stringify({ amount, password, bankCode, accName, accNo, province })\n        });\n        if (response.status == 401)\n          props.history.push('/login');\n        const data = await response.json();\n        if (response.status == 200) {\n          alert(data.message);\n          auth.user.budget = parseFloat(auth.user.budget) - parseFloat(amount);\n          localStorage.setItem('auth', JSON.stringify(auth));\n          setTotal(auth.user.budget);\n        }\n        else\n          alert(data.error);\n      })();\n    } else {\n      alert(\"Only more than 100 inr allowed!\");\n    }\n\n  };\n  const [bank, setBank] = useState(0);\n  useEffect(() => {\n    if (bank == \"Add Bank Card\") {\n      props.history.push('/bank');\n    }\n  }, [bank]);\n  return (\n    <Page title={(<><Link to=\"/my\"><Typography type=\"h4\" className={bem.e('title')}><FaArrowCircleLeft /> Withdrawal</Typography></Link><Link color=\"link\" to='/my/withdrawlList' style={{ \"padding\": \"20px\" }}><FaBars /></Link></>)} className=\"MyPage\"  >\n\n      <Row>\n        <Col md={12} style={{ textAlign: 'center' }} className={'mt-3'}>\n          <h3>Balance: ₹ {total}</h3>\n        </Col>\n        <Col xl={12} lg={12} md={12}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\"><span className=\"input-group-text\">₹</span></InputGroupAddon>\n            <Input value={amount} type=\"number\" max={parseFloat(auth.user.budget)} placeholder=\"Enter withdrawal amount\" onChange={(e) => { setAmount(e.target.value) }} />\n          </InputGroup>\n          <span style={{ fontSize: '0.7rem', fontWeight: '300', marginLeft: '30px' }}>Fee {Math.floor(amount * 0.03)} , to account {Math.ceil(amount * 0.97)}</span>\n          {/* <FormGroup>\n              <Label for=\"exampleSelect\">Payout</Label>\n              <Input type=\"select\" value={bank} name=\"select\" id=\"exampleSelect\" className='form-control' onChange={(e)=>setBank(e.target.value)} >\n                {\n                  auth.user.bank_card.map((ele,key)=>(\n                    <option key={key} value={key}>{ele.actual_name+\" \"+ele.bank_account}</option>\n                  ))\n                }\n                <option>Add Bank Card</option>                \n              </Input>\n            </FormGroup> */}\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\"><span className=\"input-group-text\"><FaKey /></span></InputGroupAddon>\n            <Input value={password} type=\"password\" placeholder=\"Enter your login password\" onChange={(e) => { setPassword(e.target.value) }} />\n          </InputGroup>\n        </Col>\n        <Col xl={12} lg={12} md={12}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\"><span className=\"input-group-text\">Bank Code</span></InputGroupAddon>\n            <Input type=\"select\" name=\"method\" value={bankCode} onChange={(e) => setBankCode(e.target.value)}>\n              <option value=\"IDPT0001\">Canara bank</option>\n              <option value=\"IDPT0002\">DCB bank</option>\n              <option value=\"IDPT0003\">Federal bank</option>\n              <option value=\"IDPT0004\">HDFC bank</option>\n              <option value=\"IDPT0005\">Punjab National bank</option>\n              <option value=\"IDPT0006\">Indian bank</option>\n              <option value=\"IDPT0007\">ICICI bank Industrial Credit Investment Bank\nof India</option>\n              <option value=\"IDPT0008\">Syndicate bank</option>\n              <option value=\"IDPT0009\">Karur vysya  bank</option>\n              <option value=\"IDPT0010\">Union Bank of India</option>\n              <option value=\"IDPT0011\">Kotak Mahindra bank</option>\n              <option value=\"IDPT0012\">IDFC first bank</option>\n              <option value=\"IDPT0013\">Andra bank</option>\n              <option value=\"IDPT0014\">Karnataka bank</option>\n              <option value=\"IDPT0015\">ICICI Corporate Bank (public account)</option>\n              <option value=\"IDPT0016\">Axis bank</option>\n              <option value=\"IDPT0017\">UCO bank</option>\n              <option value=\"IDPT0018\">South Indian bank</option>\n              <option value=\"IDPT0019\">Yes bank</option>\n              <option value=\"IDPT0020\">Standard Chartered bank</option>\n              <option value=\"IDPT0021\">State Bank of India</option>\n              <option value=\"IDPT0022\">Indian overseas bank</option>\n              <option value=\"IDPT0023\">Bandhan bank</option>\n              <option value=\"IDPT0024\">Central Bank of India</option>\n            </Input>\n          </InputGroup>\n        </Col>\n        <Col xl={12} lg={12} md={12}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\"><span className=\"input-group-text\">IFSC Code</span></InputGroupAddon>\n            <Input value={province} type=\"text\" placeholder=\"Enter IFSC Code\" onChange={(e) => { setProvince(e.target.value) }} />\n          </InputGroup>\n        </Col>\n        <Col xl={12} lg={12} md={12}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\"><span className=\"input-group-text\">Account No</span></InputGroupAddon>\n            <Input value={accNo} type=\"text\" placeholder=\"Enter your account number\" onChange={(e) => { setAccNo(e.target.value) }} />\n          </InputGroup>\n        </Col>\n        <Col xl={12} lg={12} md={12}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\"><span className=\"input-group-text\">Account Name</span></InputGroupAddon>\n            <Input value={accName} type=\"text\" placeholder=\"Enter your account name\" onChange={(e) => { setAccName(e.target.value) }} />\n          </InputGroup>\n        </Col>\n        <Col md={12} style={{ textAlign: 'center' }} className={'mt-3'}>\n          <Button onClick={apply} color=\"success\"> Withdrawal </Button>\n        </Col>\n      </Row>\n      <Row>\n        <div style={{ \"height\": '100px' }}></div>\n      </Row>\n    </Page>\n  );\n};\n\nexport default WithdrawlPage \n"],"sourceRoot":""}